datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Task {
  id          String      @id @default(cuid())
  title       String
  description String?
  status      String      @default("PENDING")
  priority    String      @default("MEDIUM")
  dueDate     DateTime?
  userId      String
  user        User        @relation(fields: [userId], references: [id])
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  deletedAt   DateTime?   
  isDeleted   Boolean     @default(false)
  events      TaskEvent[]

  @@index([userId])
  @@index([status])
  @@index([createdAt])
}

model User {
  id            String         @id @default(cuid())
  name          String?
  email         String         @unique
  password      String
  tasks         Task[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  deletedAt     DateTime?     
  isDeleted     Boolean        @default(false)
  userActivity  UserActivity[]
  lastLoginAt   DateTime?
  loginCount    Int            @default(0)

  @@index([email])
  @@index([createdAt])
}

model UserActivity {
  id          String      @id @default(cuid())
  userId      String
  user        User        @relation(fields: [userId], references: [id])
  action      String
  metadata    Json?
  ipAddress   String?
  userAgent   String?
  createdAt   DateTime    @default(now())
  deletedAt   DateTime?   
  isDeleted   Boolean     @default(false)

  @@index([userId])
  @@index([action])
  @@index([createdAt])
}

model TaskEvent {
  id          String    @id @default(cuid())
  taskId      String
  task        Task      @relation(fields: [taskId], references: [id])
  type        String    
  oldValue    String?
  newValue    String?
  createdAt   DateTime  @default(now())

  @@index([taskId])
  @@index([type])
}

enum Status {
  PENDING
  IN_PROGRESS
  COMPLETED
}

enum Priority {
  LOW
  MEDIUM
  HIGH
}