// prisma/schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Task {
  id          String      @id @default(cuid())
  title       String
  description String?
  status      String      @default("PENDING")
  priority    String      @default("MEDIUM")
  dueDate     DateTime?
  userId      String
  user        User        @relation(fields: [userId], references: [id])
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  deletedAt   DateTime?   // Add this field for soft delete
  isDeleted   Boolean     @default(false) // Add this field for quick filtering
}

model User {
  id            String         @id @default(cuid())
  name          String?
  email         String        @unique
  password      String
  tasks         Task[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  deletedAt     DateTime?     // Add this field for soft delete
  isDeleted     Boolean       @default(false) // Add this field for quick filtering
  UserActivity  UserActivity[]
}

model UserActivity {
  id          String      @id @default(cuid())
  userId      String
  user        User        @relation(fields: [userId], references: [id])
  action      String
  metadata    Json?
  ipAddress   String?
  userAgent   String?
  createdAt   DateTime    @default(now())
  deletedAt   DateTime?   // Add this field for soft delete
  isDeleted   Boolean     @default(false) // Add this field for quick filtering
}

enum Status {
  PENDING
  IN_PROGRESS
  COMPLETED
}

enum Priority {
  LOW
  MEDIUM
  HIGH
}
